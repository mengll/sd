http://www.lilinjian.com/web/2016/06/30/lumen-cors.html
namespace App\Http\Middleware;

use Closure;

class CorsMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
        $response = $next($request);

        $response->header('Access-Control-Allow-Methods', 'HEAD, GET, POST, PUT, PATCH, DELETE');
        $response->header('Access-Control-Allow-Headers', $request->header('Access-Control-Request-Headers'));
        $response->header('Access-Control-Allow-Origin', '*');

        return $response;
    }
}

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

/**
 * If the incoming request is an OPTIONS request
 * we will register a handler for the requested route
 */
class CatchAllOptionsRequestsProvider extends ServiceProvider
{
	public function register()
	{
	    $request = app('request');

	    if ($request->isMethod('OPTIONS'))
	    {
	    	app()->options($request->path(), function() {
	    		return response('', 200)->header('Access-Control-Allow-Origin', '*');
	    	});
	    }
  	}
}


$app->routeMiddleware([
    'cors' => App\Http\Middleware\CorsMiddleware::class,
]);
...
$app->register(App\Providers\CatchAllOptionsRequestsProvider::class);
